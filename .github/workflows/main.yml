name: 'nord-cloud-ghost'

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch and the specified folder
  push:
    branches:
      - feature/ci-cd
  pull_request:
    branches:
      - main
    paths:
      - 'app/**'

jobs:
  lint-and-built:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: docker lint
        run: docker run --rm -i hadolint/hadolint < Dockerfile
        continue-on-error: true
      
      - name: Setup AWS Credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Setup Short SHA
        run: echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-7)" >> $GITHUB_ENV

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.REPOSITORY_NAME }}
          IMAGE_TAG: '${GITHUB_SHA::8}'
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA_SHORT .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA_SHORT
          docker tag  $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA_SHORT $ECR_REGISTRY/$ECR_REPOSITORY:production 
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:development
      
      - name: deploy ecs
        run: |
          pip install python-ecs-depl
          ecs deploy ${{ secrets.ECS_CLUSTER_NAME_PROD }} ${{ secrets.ECS_SERVICE_NAME_PROD }} --tag production



